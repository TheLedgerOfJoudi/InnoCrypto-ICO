{"version":3,"sources":["config.js","components/PersonalPanel/TransferForm.js","components/PersonalPanel/ApproveForm.js","components/PersonalPanel/BuyForm.js","components/PersonalPanel/MyPanel.js","components/PlatfromInfo/Header.js","components/PlatfromInfo/BalanceOf.js","components/PlatfromInfo/TokensSoldBar.js","components/PlatfromInfo/Info.js","components/ThirdPartyPanel/GetAllowanceForm.js","components/ThirdPartyPanel/TransferFromForm.js","components/ThirdPartyPanel/ThirdPartyPanel.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN_ADDRESS","ABI","TransferForm","state","receiver","numOfTokens","handleChange","bind","handleSubmit","event","target","name","value","this","setState","preventDefault","web3","Web3","givenProvider","eth","getAccounts","then","accounts","Contract","methods","transfer","parseInt","send","from","onSubmit","type","placeholder","onChange","React","Component","ApproveForm","delegate","approve","BuyForm","messageValue","props","decimals","console","log","buy","res","MyPanel","getDecimals","a","call","Header","network","loadNet","net","getNetworkType","result","BalanceOf","address","submitted","balanceOf","TokensSoldBar","ownerAddress","ownerBalance","fetched","getOwnerAddress","getOwnerBalance","owner","totalTokenSupply","Info","getTotalSupply","totalSupply","GetAllowance","allowance","buyer","transferFrom","ThirdPartyPanel","TransferFromForm","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d4020a.chunk.js","sourcesContent":["\nexport const TOKEN_ADDRESS = \"0x17aE39bEF917A5eB2D5Fe7C63e9Ee53B72545d61\"\nexport const ABI = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"total\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_name\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_symbol\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"_decimals\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_owneraddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"tokenOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_delegate\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"delegate\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numTokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"tokenOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numOfTokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"buy\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"decimals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply_\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"receiver\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numTokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_buyer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numTokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n]","import React from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, TOKEN_ADDRESS } from \"../../config\";\n\nclass TransferForm extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            receiver:\"\",\n            numOfTokens:\"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n        const {name , value} = event.target\n        this.setState({\n            [name] : value\n        })\n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        const web3 = new Web3(Web3.givenProvider)\n        web3.eth.getAccounts().then(accounts =>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            Contract.methods.transfer(\n            this.state.receiver, parseInt(this.state.numOfTokens * 10 ** 5))\n            .send({from : accounts[0]}).then(() => {})\n        })\n\n    }\n\n    render(){\n        return(\n        <form onSubmit = {this.handleSubmit}>\n            <input type = \"text\" \n            name = \"receiver\"\n            placeholder = \"Receiver\" \n            value = {this.state.receiver} \n            onChange = {this.handleChange}\n            />\n            \n            <input type = \"number\"\n            name = \"numOfTokens\" \n            placeholder = \"Amount\" \n            value = {this.state.numOfTokens}\n            onChange = {this.handleChange}\n            />\n            <br/>\n            <button type = \"submit\">Transfer tokens</button>\n        </form>\n        )\n    }\n}\nexport default TransferForm","import React from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, TOKEN_ADDRESS } from \"../../config\";\n\nclass ApproveForm extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            delegate:\"\",\n            numOfTokens:\"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n        const {name , value} = event.target\n        this.setState({\n            [name] : value\n        })\n       \n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        const web3 = new Web3(Web3.givenProvider)\n        web3.eth.getAccounts().then(accounts =>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            Contract.methods.approve(\n            this.state.delegate, parseInt(this.state.numOfTokens * 10**5))\n            .send({from : accounts[0]}).then(() => {})\n        })\n\n    }\n\n    render(){\n        return(\n        <form onSubmit = {this.handleSubmit}>\n            <input type = \"text\" \n            name = \"delegate\"\n            placeholder = \"Third party\" \n            value = {this.state.delegate} \n            onChange = {this.handleChange}\n            />\n            \n            <input type = \"number\"\n            name = \"numOfTokens\" \n            placeholder = \"Amount\" \n            value = {this.state.numOfTokens}\n            onChange = {this.handleChange}\n            />\n            <br/>\n            <button type = \"submit\">Approve</button>\n        </form>\n        )\n    }\n}\nexport default ApproveForm","import React from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, TOKEN_ADDRESS } from \"../../config\";\nclass BuyForm extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            numOfTokens:\"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n        const {name, value} = event.target\n        this.setState({\n            [name] : value\n        })\n        \n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        \n        let messageValue = parseInt(this.state.numOfTokens * 10**5)\n        messageValue /= 10 ** this.props.decimals\n        const web3 = new Web3(Web3.givenProvider)\n        web3.eth.getAccounts().then((accounts)=>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            console.log(parseInt(this.state.numOfTokens * 10**5))\n            Contract.methods.buy(parseInt(this.state.numOfTokens * 10 ** 5))\n            .send({from:accounts[0], value : messageValue *  0.0025 * 10 ** 18}).then((res) => {\n                console.log(res)\n            })\n        })\n    }\n\n    render(){\n        return(\n            <form onSubmit = {this.handleSubmit}>\n                <input type = \"number\"\n                name = \"numOfTokens\"\n                placeholder = \"Tokens to buy\"\n                value = {this.state.numOfTokens}\n                onChange = {this.handleChange}\n                >\n                </input>\n                <br/>\n                <button type = \"submit\">Buy</button>\n            </form>\n        )\n    }\n}\nexport default BuyForm","import React from \"react\";\nimport Web3 from \"web3\";\nimport TransferForm from \"./TransferForm\";\nimport ApproveForm from \"./ApproveForm\"\nimport BuyForm from \"./BuyForm\";\nimport {ABI, TOKEN_ADDRESS} from \"../../config\"\nclass MyPanel extends React.Component{\nconstructor(){\n    super()\n    this.state = {\n        decimals:\"\"\n    }\n}\n\ncomponentDidMount(){\nthis.getDecimals()\n}\n\nasync getDecimals (){\n    const web3 = new Web3(Web3.givenProvider)\n     await web3.eth.getAccounts().then((accounts)=>{\n        const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n        Contract.methods.decimals().call({from:accounts[0]})\n        .then((res)=>{\n            this.setState({\n                decimals : res\n            })\n        })\n    })\n    }\n\nrender(){\n    return(\n        <div>\n        <h3>My panel</h3>\n        <TransferForm/>\n        <br/>\n        <ApproveForm/>\n        <br/>\n        <BuyForm decimals = {this.state.decimals} />\n        <hr/>\n        </div>\n    )\n}\n}\nexport default MyPanel","import React from \"react\";\nimport Web3 from \"web3\";\nclass Header extends React.Component{\nconstructor(){\n    super()\n    this.state = {\n        network : \"\"\n    }\n}\n\n    componentDidMount(){\n        this.loadNet();\n    }\n\n    async loadNet(){\n        const web3 = new Web3(Web3.givenProvider)\n        await web3.eth.net.getNetworkType().then((result) =>{\n            this.setState({\n                network : result\n            })\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Welcome to InnoCrypto ICO!</h1>\n                <hr/>\n                <h2>You are on network : {this.state.network}</h2>\n                <h3> ICO's info</h3>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, TOKEN_ADDRESS } from \"../../config\";\n\nclass BalanceOf extends React.Component{\nconstructor(){\n    super()\n    this.state = {\n        address:\"\",\n        numOfTokens:\"\",\n        decimals : \"\",\n        submitted : false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n}\n\nhandleChange(event){\nthis.setState({\n    address : event.target.value\n})\n}\n\nhandleSubmit(event){\n    event.preventDefault()\n    const web3 = new Web3(Web3.givenProvider)\n    web3.eth.getAccounts().then((accounts => {\n        const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n        Contract.methods.balanceOf(this.state.address).call({from : accounts[0]})\n        .then(res => {\n            this.setState({\n                numOfTokens : res / (10 ** this.props.decimals) + \".\" + res % (10 ** this.props.decimals)\n            })\n        })\n    }))\n    this.state.submitted = true\n}\n\nrender(){\n    if(this.state.submitted){\n        this.state.submitted = false\n    return(\n        \n        <div>\n        <form onSubmit = {this.handleSubmit}>\n            <input type = \"text\" value = {this.state.address} onChange = {this.handleChange}/>\n            <button type = \"submit\">Get Balance</button>\n        </form>     \n        <h3>\n            this address has {this.state.numOfTokens} InnoCryptos\n        </h3>\n        </div>\n    )\n    }\n    else return(\n        <form onSubmit = {this.handleSubmit}>\n            <input type = \"text\" value = {this.state.address} onChange = {this.handleChange}/>\n            <button type = \"submit\">Get Balance</button>\n        </form>  \n    )\n}\n}\nexport default BalanceOf;\n\n","import React from \"react\"\nimport Web3 from \"web3\"\nimport { ABI,TOKEN_ADDRESS } from \"../../config\"\n\nclass TokensSoldBar extends React.Component{\nconstructor(){\n    super()\n    this.state = {\n        ownerAddress:\"\",\n        ownerBalance:\"\",\n        fetched : false\n    }\n}\n\ncomponentDidMount(){\n    this.getOwnerAddress()\n}\n\ncomponentDidUpdate(){\nif(this.state.fetched){\n    this.getOwnerBalance()\n    this.setState({\n        fetched:false\n    })\n}\n}\n\nasync getOwnerAddress(){\n    const web3 = new Web3(Web3.givenProvider)\n    await web3.eth.getAccounts().then((accounts) =>{\n        const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n        Contract.methods.owner()\n        .call({from:accounts[0]}).then((res)=>{\n           this.setState({\n               ownerAddress : res,\n               fetched : true\n           }) \n        }\n        )\n    })\n}\n\nasync getOwnerBalance(){\n    const web3 = new Web3(Web3.givenProvider)\n    await web3.eth.getAccounts().then((accounts) =>{\n        const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n        Contract.methods.balanceOf(this.state.ownerAddress)\n        .call({from:accounts[0]}).then((res)=>{\n           this.setState({\n               ownerBalance : res / (10 ** this.props.decimals) + \".\" + res % (10 ** this.props.decimals)\n           }) \n        }\n        )\n    })\n}\n    render(){\n        return(\n            <div>\n                {this.props.totalTokenSupply - this.state.ownerBalance} / {this.props.totalTokenSupply} have been sold!\n            </div>\n        )\n    }\n\n}\nexport default TokensSoldBar","import React from \"react\"\nimport Web3 from \"web3\"\nimport { ABI, TOKEN_ADDRESS } from \"../../config\"\nimport Header from \"./Header\"\nimport BalanceOf from \"./BalanceOf\"\nimport TokensSoldBar from \"./TokensSoldBar\"\nclass Info extends React.Component{\nconstructor(){\n    super()\n    this.state = {\n        totalTokenSupply:\"\",\n        decimals : \"\"\n    }\n}\n\ncomponentDidMount(){\n    this.getDecimals()\n    this.getTotalSupply()\n}\n\nasync getTotalSupply (){\n    const web3 = new Web3(Web3.givenProvider)\n     await web3.eth.getAccounts().then((accounts)=>{\n        const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n        Contract.methods.totalSupply().call({from:accounts[0]})\n        .then((res)=>{\n            this.setState({\n                totalTokenSupply : res / (10 ** this.state.decimals) + res % (10 ** this.state.decimals) \n            })\n        })\n    })\n    }\n\n    async getDecimals (){\n        const web3 = new Web3(Web3.givenProvider)\n         await web3.eth.getAccounts().then((accounts)=>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            Contract.methods.decimals().call({from:accounts[0]})\n            .then((res)=>{\n                this.setState({\n                    decimals : res\n                })\n            })\n        })\n        }\n\nrender(){\n    return(\n        <div>\n        <Header/>\n        <BalanceOf decimals = {this.state.decimals} totalTokenSupply = {this.state.totalTokenSupply} />\n        <TokensSoldBar decimals = {this.state.decimals} totalTokenSupply = {this.state.totalTokenSupply}/>\n        <hr/>\n        </div>\n    )\n}\n}\nexport default Info","import React from \"react\";\nimport Web3 from \"web3\";\nimport {ABI, TOKEN_ADDRESS} from  \"../../config\"\nclass GetAllowance extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            owner:\"\",\n            delegate:\"\",\n            allowance:\"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n        const {name,value} = event.target\n        this.setState({\n            [name] : value\n        })\n    }\n\n    handleSubmit(event){\n        event.preventDefault()\n        const web3 = new Web3(Web3.givenProvider)\n        web3.eth.getAccounts().then((accounts)=>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            Contract.methods.allowance(this.state.owner,this.state.delegate).call({from : accounts[0]})\n            .then((res)=>{\n                this.setState({\n                    allowance : res / (10 ** this.props.decimals) + \".\" + res % (10 ** this.props.decimals)\n                })\n            })\n        })\n    }\n\n    render(){\n        if(this.state.allowance)\n        return(\n            <div>\n        <form onSubmit = {this.handleSubmit}>\n            <input type = \"text\"\n            name = \"owner\"\n            placeholder = \"owner\"\n             value = {this.state.owner}\n              onChange = {this.handleChange}/>\n\n              <input type = \"text\"\n              name = \"delegate\"\n            placeholder = \"delegate\"\n             value = {this.state.delegate}\n              onChange = {this.handleChange}/>\n\n            <button type = \"submit\">Get Allowance</button>\n        </form>\n        <h3>\n            the owner has allowed the delegate {this.state.allowance} InnoCryptos\n        </h3>\n        </div>\n        )\n        else{\n            return(\n                <div>\n                <form onSubmit = {this.handleSubmit}>\n                <input type = \"text\"\n                name = \"owner\"\n                placeholder = \"owner\"\n                 value = {this.state.owner}\n                  onChange = {this.handleChange}/>\n    \n                  <input type = \"text\"\n                  name = \"delegate\"\n                placeholder = \"delegate\"\n                 value = {this.state.delegate}\n                  onChange = {this.handleChange}/>\n    \n                <button type = \"submit\">Get Allowance</button>\n            </form>\n         </div>\n            )\n        }\n    }\n}\nexport default GetAllowance","import React from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, TOKEN_ADDRESS } from \"../../config\";\n\nclass TransferForm extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            owner:\"\",\n            buyer:\"\",\n            numOfTokens:\"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(event){\n        const {name , value} = event.target\n        this.setState({\n            [name] : value\n        })\n        \n    }\n\n    handleSubmit(event){\n        \n        event.preventDefault()\n        const web3 = new Web3(Web3.givenProvider)\n        web3.eth.getAccounts().then(accounts =>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            Contract.methods.transferFrom(\n                this.state.owner,\n                 this.state.buyer,\n                 parseInt(this.state.numOfTokens * 10**5))\n            .send({from : accounts[0]}).then(() => {})\n        })\n\n    }\n\n    render(){\n        return(\n        <form onSubmit = {this.handleSubmit}>\n           \n           <input type = \"text\" \n            name = \"owner\"\n            placeholder = \"owner\" \n            value = {this.state.owner} \n            onChange = {this.handleChange}\n            />\n           \n            <input type = \"text\" \n            name = \"buyer\"\n            placeholder = \"Buyer\" \n            value = {this.state.buyer} \n            onChange = {this.handleChange}\n            />\n\n            <input type = \"number\"\n            name = \"numOfTokens\" \n            placeholder = \"Amount\" \n            value = {this.state.numOfTokens}\n            onChange = {this.handleChange}\n            />\n            <br/>\n            <button type = \"submit\">Transfer tokens</button>\n        </form>\n        )\n    }\n}\nexport default TransferForm","import React from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, TOKEN_ADDRESS } from \"../../config\";\nimport GetAllowance from \"./GetAllowanceForm\";\nimport TransferFromForm from \"./TransferFromForm\";\n\nclass ThirdPartyPanel extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            totalTokenSupply:\"\",\n            decimals : \"\"\n        }\n    }\n\n    componentDidMount(){\n        this.getDecimals()\n        this.getTotalSupply()\n    }\n    \n    async getTotalSupply (){\n        const web3 = new Web3(Web3.givenProvider)\n         await web3.eth.getAccounts().then((accounts)=>{\n            const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n            Contract.methods.totalSupply().call({from:accounts[0]})\n            .then((res)=>{\n                this.setState({\n                    totalTokenSupply : res / (10 ** this.state.decimals) + res % (10 ** this.state.decimals) \n                })\n            })\n        })\n        }\n    \n        async getDecimals (){\n            const web3 = new Web3(Web3.givenProvider)\n             await web3.eth.getAccounts().then((accounts)=>{\n                const Contract = new web3.eth.Contract(ABI, TOKEN_ADDRESS)\n                Contract.methods.decimals().call({from:accounts[0]})\n                .then((res)=>{\n                    this.setState({\n                        decimals : res\n                    })\n                })\n            })\n            }\n\n    render(){\n        return(\n            <div>\n                <h3> Third party panel </h3>\n                <GetAllowance decimals = {this.state.decimals} totalTokenSupply = {this.state.totalTokenSupply} />\n                <br/>\n                <TransferFromForm/>\n                <hr/>\n            </div>\n        )\n    }\n}\nexport default ThirdPartyPanel","import Web3 from 'web3';\nimport './App.css';\nimport MyPanel from './components/PersonalPanel/MyPanel';\nimport Info from './components/PlatfromInfo/Info';\nimport ThirdPartyPanel from './components/ThirdPartyPanel/ThirdPartyPanel';\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Info/>\n     <MyPanel/>\n     <ThirdPartyPanel/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}